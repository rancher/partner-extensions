{"version":3,"file":"nutanix-1.0.0.umd.min.262.js","mappings":"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","sources":["webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/utils/url.ts","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?ea14","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?b6c9","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?42b0","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?419d","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?a88f","webpack://nutanix-1.0.0/../../node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?bddb"],"sourcesContent":["type UriField = 'source' | 'protocol' | 'authority' | 'userInfo' | 'user' | 'password' | 'host' | 'port' | 'relative' | 'path' | 'directory' | 'file' | 'queryStr' | 'anchor'\ntype UriFields = {\n  [key in UriField]: string; // eslint-disable-line no-unused-vars\n}\nexport type QueryParams = {\n  [key: string]: string\n}\n\ninterface ParsedUri extends UriFields {\n  query: QueryParams;\n}\n\nexport function addParam(url: string, key: string, val: string | string[]): string {\n  let out = url + (url.includes('?') ? '&' : '?');\n\n  // val can be a string or an array of strings\n  if ( !Array.isArray(val) ) {\n    val = [val];\n  }\n  out += val.map((v) => {\n    if ( v === null ) {\n      return `${ encodeURIComponent(key) }`;\n    } else {\n      return `${ encodeURIComponent(key) }=${ encodeURIComponent(v) }`;\n    }\n  }).join('&');\n\n  return out;\n}\n\nexport function addParams(url: string, params: QueryParams): string {\n  if ( params && typeof params === 'object' ) {\n    Object.keys(params).forEach((key) => {\n      url = addParam(url, key, params[key]);\n    });\n  }\n\n  return url;\n}\n\nexport function removeParam(url: string, key: string): string {\n  const parsed = parse(url);\n\n  if ( parsed.query?.[key] ) {\n    delete parsed.query[key];\n  }\n\n  return stringify(parsed);\n}\n\nexport function parseLinkHeader(str: string): Record<string, string> {\n  const out: { [key: string]: string} = { };\n  const lines = (str || '').split(',');\n\n  for ( const line of lines ) {\n    const match = line.match(/^\\s*<([^>]+)>\\s*;\\s*rel\\s*=\"(.*)\"/);\n\n    if ( match ) {\n      out[match[2].toLowerCase()] = match[1];\n    }\n  }\n\n  return out;\n}\n\nexport function isMaybeSecure(port: number, proto: string): boolean {\n  const protocol = proto.toLowerCase();\n\n  return portMatch([port], [443, 8443], ['443']) || protocol === 'https';\n}\n\nexport function portMatch(ports: number[], equals: number[], endsWith: string[]): boolean {\n  for (let i = 0; i < ports.length; i++) {\n    const port = ports[i];\n\n    if (equals.includes(port)) {\n      return true;\n    }\n\n    for (let j = 0; j < endsWith.length; j++) {\n      const suffix = `${ endsWith[j] }`;\n      const portStr = `${ port }`;\n\n      if (portStr !== suffix && portStr.endsWith(suffix)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// https://javascriptsource.com/parseuri/\n// MIT License\nexport function parse(str: string): ParsedUri {\n  const o = parse.options;\n  const m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\n  if (!m) {\n    throw new Error(`Cannot parse as uri: ${ str }`);\n  }\n  const uri = {} as ParsedUri;\n  let i = 14;\n\n  while (i--) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri.query = {};\n  uri.queryStr.replace(o.q.parser, (_, $1: string, $2: string): string => {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n\n    return '';\n  });\n\n  return uri;\n}\n\nparse.options = {\n  strictMode: false,\n  key:        ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'queryStr', 'anchor'],\n  q:          {\n    name:   'query',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n} as {\n  strictMode: boolean,\n  key: UriField[],\n  q: {\n    name: 'query',\n    parser: RegExp\n  },\n  parser: {\n    strict: RegExp,\n    loose: RegExp\n  }\n};\n\nexport function stringify(uri: ParsedUri): string {\n  let out = `${ uri.protocol }://`;\n\n  if ( uri.user && uri.password ) {\n    out += `${ uri.user }:${ uri.password }@`;\n  } else if ( uri.user ) {\n    out += `${ uri.user }@`;\n  }\n\n  out += uri.host;\n\n  if ( uri.port ) {\n    out += `:${ uri.port }`;\n  }\n\n  out += uri.path || '/';\n\n  out = addParams(out, uri.query || {});\n\n  if ( uri.anchor ) {\n    out += `#${ uri.anchor }`;\n  }\n\n  return out;\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../@vue/cli-service/node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".labeled-input.view input[data-v-40193f43]{text-overflow:ellipsis}.hideArrows input[data-v-40193f43]::-webkit-inner-spin-button,.hideArrows input[data-v-40193f43]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.hideArrows input[type=number][data-v-40193f43]{-moz-appearance:textfield}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../@vue/cli-service/node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".validation-message{padding:5px;position:absolute;bottom:-35px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../@vue/cli-service/node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../../vue-loader/dist/stylePostLoader.js!../../../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../../sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../../cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../../vue-loader/dist/index.js??ruleSet[0].use[1]!./LabeledInput.vue?vue&type=style&index=0&id=40193f43&scoped=true&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"59824359\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, mergeProps as _mergeProps, resolveDirective as _resolveDirective, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-40193f43\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = {\n  key: 2,\n  class: \"required\"\n}\nconst _hoisted_3 = [\"maxlength\", \"disabled\", \"type\", \"value\", \"placeholder\", \"data-lpignore\"]\nconst _hoisted_4 = {\n  key: 2,\n  class: \"sub-label\"\n}\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_t = _resolveComponent(\"t\")!\n  const _component_TextAreaAutoGrow = _resolveComponent(\"TextAreaAutoGrow\")!\n  const _component_LabeledTooltip = _resolveComponent(\"LabeledTooltip\")!\n  const _directive_clean_html = _resolveDirective(\"clean-html\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      'labeled-input': true,\n      focused: _ctx.focused,\n      [_ctx.mode]: true,\n      disabled: _ctx.isDisabled,\n      [_ctx.status]: _ctx.status,\n      suffix: _ctx.hasSuffix,\n      'v-popper--has-tooltip': _ctx.hasTooltip,\n      'compact-input': _ctx.isCompact,\n      hideArrows: _ctx.hideArrows,\n      [_ctx.className]: true\n    })\n  }, [\n    _renderSlot(_ctx.$slots, \"label\", {}, () => [\n      (_ctx.hasLabel)\n        ? (_openBlock(), _createElementBlock(\"label\", _hoisted_1, [\n            (_ctx.labelKey)\n              ? (_openBlock(), _createBlock(_component_t, {\n                  key: 0,\n                  k: _ctx.labelKey\n                }, null, 8, [\"k\"]))\n              : (_ctx.label)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                    _createTextVNode(_toDisplayString(_ctx.label), 1)\n                  ], 64))\n                : _createCommentVNode(\"\", true),\n            (_ctx.requiredField)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"*\"))\n              : _createCommentVNode(\"\", true)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ], true),\n    _renderSlot(_ctx.$slots, \"prefix\", {}, undefined, true),\n    _renderSlot(_ctx.$slots, \"field\", {}, () => [\n      (_ctx.type === 'multiline' || _ctx.type === 'multiline-password')\n        ? (_openBlock(), _createBlock(_component_TextAreaAutoGrow, _mergeProps({\n            key: 0,\n            ref: \"value\"\n          }, _ctx.$attrs, {\n            maxlength: _ctx._maxlength,\n            disabled: _ctx.isDisabled,\n            value: _ctx.value || '',\n            placeholder: _ctx._placeholder,\n            autocapitalize: \"off\",\n            class: { conceal: _ctx.type === 'multiline-password' },\n            \"onUpdate:value\": _ctx.onInput,\n            onFocus: _ctx.onFocus,\n            onBlur: _ctx.onBlur\n          }), null, 16, [\"maxlength\", \"disabled\", \"value\", \"placeholder\", \"class\", \"onUpdate:value\", \"onFocus\", \"onBlur\"]))\n        : (_openBlock(), _createElementBlock(\"input\", _mergeProps({\n            key: 1,\n            ref: \"value\",\n            class: { 'no-label': !_ctx.hasLabel }\n          }, _ctx.$attrs, {\n            maxlength: _ctx._maxlength,\n            disabled: _ctx.isDisabled,\n            type: _ctx.type === 'cron' ? 'text' : _ctx.type,\n            value: _ctx.value,\n            placeholder: _ctx._placeholder,\n            autocomplete: \"off\",\n            autocapitalize: \"off\",\n            \"data-lpignore\": _ctx.ignorePasswordManagers,\n            onInput: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n            onFocus: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onFocus && _ctx.onFocus(...args))),\n            onBlur: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n            onChange: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n          }), null, 16, _hoisted_3))\n    ], true),\n    _renderSlot(_ctx.$slots, \"suffix\", {}, undefined, true),\n    (_ctx.hasTooltip && !_ctx.focused)\n      ? (_openBlock(), _createBlock(_component_LabeledTooltip, {\n          key: 0,\n          hover: _ctx.hoverTooltip,\n          value: _ctx.tooltipValue,\n          status: _ctx.status\n        }, null, 8, [\"hover\", \"value\", \"status\"]))\n      : _createCommentVNode(\"\", true),\n    (!!_ctx.validationMessage)\n      ? (_openBlock(), _createBlock(_component_LabeledTooltip, {\n          key: 1,\n          hover: _ctx.hoverTooltip,\n          value: _ctx.validationMessage\n        }, null, 8, [\"hover\", \"value\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.cronHint || _ctx.subLabel)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          (_ctx.cronHint)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_ctx.cronHint), 1))\n            : _createCommentVNode(\"\", true),\n          (_ctx.subLabel)\n            ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_6, null, 512)), [\n                [_directive_clean_html, _ctx.subLabel]\n              ])\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}","<script lang=\"ts\">\nimport { defineComponent, inject } from 'vue';\nimport TextAreaAutoGrow from '@components/Form/TextArea/TextAreaAutoGrow.vue';\nimport LabeledTooltip from '@components/LabeledTooltip/LabeledTooltip.vue';\nimport { escapeHtml } from '@shell/utils/string';\nimport cronstrue from 'cronstrue';\nimport { isValidCron } from 'cron-validator';\nimport { debounce } from 'lodash';\nimport { useLabeledFormElement, labeledFormElementProps } from '@shell/composables/useLabeledFormElement';\nimport { useCompactInput } from '@shell/composables/useCompactInput';\n\ninterface NonReactiveProps {\n  onInput: (event: Event) => void | ((event: Event) => void);\n}\n\nconst provideProps: NonReactiveProps = {\n  onInput() {\n    // noop\n  },\n};\n\nexport default defineComponent({\n  components: { LabeledTooltip, TextAreaAutoGrow },\n\n  inheritAttrs: false,\n\n  props: {\n    ...labeledFormElementProps,\n    /**\n     * The type of the Labeled Input.\n     * @values text, cron, multiline, multiline-password\n     */\n    type: {\n      type:    String,\n      default: 'text'\n    },\n\n    /**\n     * The status class of the Labeled Input and tooltip.\n     * @values info, success, warning, error\n     */\n    status: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The sub-label for the Labeled Input.\n     */\n    subLabel: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The tooltip to display for the Labeled Input.\n     */\n    tooltip: {\n      default: null,\n      type:    [String, Object]\n    },\n\n    /**\n     * Renders the tooltip when hovering the cursor over the Labeled Input.\n     */\n    hoverTooltip: {\n      type:    Boolean,\n      default: true\n    },\n\n    /**\n     * Disables the password manager prompt to save the contents of the Labeled\n     * Input.\n     */\n    ignorePasswordManagers: {\n      default: false,\n      type:    Boolean\n    },\n\n    /**\n     * The max length of the Labeled Input.\n     */\n    maxlength: {\n      type:    Number,\n      default: null\n    },\n\n    /**\n     * Hides arrows on the Labeled Input.\n     * @deprecated This doesn't appear to be in use for Labeled Input.\n     */\n    hideArrows: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Optionally delay on input while typing.\n     */\n    delay: {\n      type:    Number,\n      default: 0\n    },\n\n    class: {\n      type:    String,\n      default: ''\n    }\n  },\n\n  emits: ['change', 'update:value', 'blur', 'update:validation'],\n\n  setup(props, { emit }) {\n    const {\n      focused,\n      onFocusLabeled,\n      onBlurLabeled,\n      isDisabled,\n      validationMessage,\n      requiredField\n    } = useLabeledFormElement(props, emit);\n    const { isCompact } = useCompactInput(props);\n\n    const onInput = inject('onInput', provideProps.onInput);\n\n    return {\n      focused,\n      onFocusLabeled,\n      onBlurLabeled,\n      onInput,\n      isDisabled,\n      validationMessage,\n      requiredField,\n      isCompact,\n    };\n  },\n\n  data() {\n    return {\n      updated:          false,\n      validationErrors: '',\n    };\n  },\n\n  computed: {\n    /**\n     * Determines if the Labeled Input should display a label.\n     */\n    hasLabel(): boolean {\n      return this.isCompact ? false : !!this.label || !!this.labelKey || !!this.$slots.label;\n    },\n\n    /**\n     * Determines if the Labeled Input should display a tooltip.\n     */\n    hasTooltip(): boolean {\n      return !!this.tooltip || !!this.tooltipKey;\n    },\n\n    tooltipValue(): string | Record<string, unknown> | undefined {\n      if (this.hasTooltip) {\n        return this.tooltipKey ? this.t(this.tooltipKey) : this.tooltip;\n      }\n\n      return undefined;\n    },\n\n    /**\n     * Determines if the Labeled Input makes use of the suffix slot.\n     */\n    hasSuffix(): boolean {\n      return !!this.$slots.suffix;\n    },\n\n    /**\n     * Determines if the Labeled Input should display a cron hint.\n     */\n    cronHint(): string | undefined {\n      if (this.type !== 'cron' || !this.value) {\n        return;\n      }\n      // refer https://github.com/GuillaumeRochat/cron-validator#readme\n      if (!isValidCron(this.value as string, {\n        alias:              true,\n        allowBlankDay:      true,\n        allowSevenAsSunday: true,\n      })) {\n        return this.t('generic.invalidCron');\n      }\n      try {\n        const hint = cronstrue.toString(this.value as string || '', { verbose: true });\n\n        return hint;\n      } catch (e) {\n        return this.t('generic.invalidCron');\n      }\n    },\n\n    /**\n     * The placeholder value for the Labeled Input.\n     */\n    _placeholder(): string {\n      if (this.placeholder) {\n        return this.placeholder.toString();\n      }\n      if (this.placeholderKey) {\n        return this.t(this.placeholderKey);\n      }\n\n      return '';\n    },\n\n    /**\n     * The max length for the Labeled Input.\n     */\n    _maxlength(): number | undefined {\n      if (this.type === 'text' && this.maxlength) {\n        return this.maxlength;\n      }\n\n      return undefined;\n    },\n\n    className() {\n      return this.class;\n    }\n  },\n\n  created() {\n    /**\n     * Determines if the Labeled Input @input event should be debounced.\n    */\n    this.onInput = this.delay ? debounce(this.delayInput, this.delay) : this.delayInput;\n  },\n\n  methods: {\n    /**\n     * Attempts to give the Labeled Input focus.\n     */\n    focus(): void {\n      const comp = this.$refs.value as HTMLInputElement;\n\n      if (comp) {\n        comp.focus();\n      }\n    },\n\n    /**\n     * Attempts to select the Labeled Input.\n     * @deprecated\n     */\n    select(): void {\n      const comp = this.$refs.value as HTMLInputElement;\n\n      if (comp) {\n        comp.select();\n      }\n    },\n\n    /**\n     * Emit on input change\n     */\n    onChange(event: Event): void {\n      this.$emit('change', event);\n    },\n\n    /**\n     * Emit on input with delay. Note: Arrow function is avoided due context\n     * binding.\n     *\n     * NOTE: In multiline, TextAreaAutoGrow emits a string with the value\n     * https://github.com/rancher/dashboard/issues/10249\n     */\n    delayInput(val: string | Event): void {\n      const value = typeof val === 'string' ? val : (val?.target as HTMLInputElement)?.value;\n\n      this.$emit('update:value', value);\n    },\n\n    /**\n     * Handles the behavior of the Labeled Input when given focus.\n     * @see labeled-form-element.ts mixin for onFocusLabeled()\n     */\n    onFocus(): void {\n      this.onFocusLabeled();\n    },\n\n    /**\n     * Handles the behavior of the Labeled Input when blurred and emits the blur\n     * event.\n     * @see labeled-form-element.ts mixin for onBlurLabeled()\n     */\n    onBlur(event: string | FocusEvent): void {\n      this.$emit('blur', event);\n      this.onBlurLabeled();\n    },\n\n    escapeHtml\n  }\n});\n</script>\n\n<template>\n  <div\n    :class=\"{\n      'labeled-input': true,\n      focused,\n      [mode]: true,\n      disabled: isDisabled,\n      [status]: status,\n      suffix: hasSuffix,\n      'v-popper--has-tooltip': hasTooltip,\n      'compact-input': isCompact,\n      hideArrows,\n      [className]: true\n    }\"\n  >\n    <slot name=\"label\">\n      <label v-if=\"hasLabel\">\n        <t\n          v-if=\"labelKey\"\n          :k=\"labelKey\"\n        />\n        <template v-else-if=\"label\">{{ label }}</template>\n\n        <span\n          v-if=\"requiredField\"\n          class=\"required\"\n        >*</span>\n      </label>\n    </slot>\n\n    <slot name=\"prefix\" />\n\n    <slot name=\"field\">\n      <TextAreaAutoGrow\n        v-if=\"type === 'multiline' || type === 'multiline-password'\"\n        ref=\"value\"\n        v-bind=\"$attrs\"\n        :maxlength=\"_maxlength\"\n        :disabled=\"isDisabled\"\n        :value=\"value || ''\"\n        :placeholder=\"_placeholder\"\n        autocapitalize=\"off\"\n        :class=\"{ conceal: type === 'multiline-password' }\"\n        @update:value=\"onInput\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n      <input\n        v-else\n        ref=\"value\"\n        :class=\"{ 'no-label': !hasLabel }\"\n        v-bind=\"$attrs\"\n        :maxlength=\"_maxlength\"\n        :disabled=\"isDisabled\"\n        :type=\"type === 'cron' ? 'text' : type\"\n        :value=\"value\"\n        :placeholder=\"_placeholder\"\n        autocomplete=\"off\"\n        autocapitalize=\"off\"\n        :data-lpignore=\"ignorePasswordManagers\"\n        @input=\"onInput\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change=\"onChange\"\n      >\n    </slot>\n\n    <slot name=\"suffix\" />\n    <LabeledTooltip\n      v-if=\"hasTooltip && !focused\"\n      :hover=\"hoverTooltip\"\n      :value=\"tooltipValue\"\n      :status=\"status\"\n    />\n    <LabeledTooltip\n      v-if=\"!!validationMessage\"\n      :hover=\"hoverTooltip\"\n      :value=\"validationMessage\"\n    />\n    <div\n      v-if=\"cronHint || subLabel\"\n      class=\"sub-label\"\n    >\n      <div\n        v-if=\"cronHint\"\n      >\n        {{ cronHint }}\n      </div>\n      <div\n        v-if=\"subLabel\"\n        v-clean-html=\"subLabel\"\n      />\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n.labeled-input.view {\n  input {\n    text-overflow: ellipsis;\n  }\n}\n\n.hideArrows {\n  /* Hide arrows on number input when it overlaps with the unit */\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n}\n</style>\n<style>\n.validation-message {\n  padding: 5px;\n  position: absolute;\n  bottom: -35px;\n}\n</style>\n","import { render } from \"./LabeledInput.vue?vue&type=template&id=40193f43&scoped=true&ts=true\"\nimport script from \"./LabeledInput.vue?vue&type=script&lang=ts\"\nexport * from \"./LabeledInput.vue?vue&type=script&lang=ts\"\n\nimport \"./LabeledInput.vue?vue&type=style&index=0&id=40193f43&scoped=true&lang=scss\"\nimport \"./LabeledInput.vue?vue&type=style&index=1&id=40193f43&lang=css\"\n\nimport exportComponent from \"../../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-40193f43\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../@vue/cli-service/node_modules/css-loader/dist/cjs.js??clonedRuleSet-13.use[1]!../../../../../vue-loader/dist/stylePostLoader.js!../../../../../postcss-loader/dist/cjs.js??clonedRuleSet-13.use[2]!../../../../../postcss-loader/dist/cjs.js??clonedRuleSet-13.use[3]!../../../../../cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../../vue-loader/dist/index.js??ruleSet[0].use[1]!./LabeledInput.vue?vue&type=style&index=1&id=40193f43&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"88d5cb18\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["parse","str","o","options","m","parser","strictMode","exec","Error","uri","i","key","query","queryStr","replace","q","_","$1","$2","name","strict","loose","___CSS_LOADER_EXPORT___","push","module","id","content","__esModule","default","locals","exports","add","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","render","_ctx","_cache","$props","$setup","$data","$options","_component_t","_resolveComponent","_component_TextAreaAutoGrow","_component_LabeledTooltip","_directive_clean_html","_resolveDirective","_openBlock","_createElementBlock","_normalizeClass","focused","mode","disabled","isDisabled","status","suffix","hasSuffix","hasTooltip","isCompact","hideArrows","className","_renderSlot","$slots","hasLabel","labelKey","_createBlock","k","label","_Fragment","_createTextVNode","_toDisplayString","_createCommentVNode","requiredField","undefined","type","_mergeProps","ref","$attrs","maxlength","_maxlength","value","placeholder","_placeholder","autocapitalize","conceal","onInput","onFocus","onBlur","autocomplete","ignorePasswordManagers","args","onChange","hover","hoverTooltip","tooltipValue","validationMessage","cronHint","subLabel","_withDirectives","provideProps","defineComponent","components","LabeledTooltip","TextAreaAutoGrow","inheritAttrs","props","labeledFormElementProps","String","tooltip","Object","Boolean","Number","delay","emits","setup","emit","onFocusLabeled","onBlurLabeled","useLabeledFormElement","useCompactInput","inject","data","updated","validationErrors","computed","this","tooltipKey","t","isValidCron","alias","allowBlankDay","allowSevenAsSunday","hint","cronstrue","verbose","e","toString","placeholderKey","created","debounce","delayInput","methods","focus","comp","$refs","select","event","$emit","val","target","escapeHtml","__exports__"],"sourceRoot":""}